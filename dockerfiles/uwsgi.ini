[uwsgi]
# Who will run the code
uid = searx
gid = searx

# set (python) default encoding UTF-8
env = LANG=C.UTF-8
env = LANGUAGE=C.UTF-8
env = LC_ALL=C.UTF-8

# Number of workers (usually CPU count)
workers = 4

auto-procname = true

# The right granted on the created socket
chmod-socket = 666

# Plugin to use and interpretor config
single-interpreter = true
master = true
plugin = python3
lazy-apps = true
enable-threads = true

# Module to import
module = searx.webapp

# Virtualenv and python path
pythonpath = /usr/local/searx/
chdir = /usr/local/searx/searx/

# Disable logging for privacy
# Except HTTP error 5xx
disable-logging = true
log-5xx = true

# Log max size: 10MB
log-maxsize = 10485760
log-backupname = /var/log/uwsgi/uwsgi.log.1
logto = /var/log/uwsgi/uwsgi.log

# No keep alive
# See https://github.com/searx/searx-docker/issues/24
add-header = Connection: close

# uwsgi serves the static files
# expires set to one day as Flask does
static-map = /static=/usr/local/searx/searx/static
static-expires = /* 864000
static-gzip-all = True
offload-threads = %k

cache2 = name=searxcache,items=2000,blocks=2000,blocksize=4096,bitmap=1
